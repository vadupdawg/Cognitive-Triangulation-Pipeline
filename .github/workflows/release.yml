name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write
  packages: write

jobs:
  release:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        registry-url: 'https://registry.npmjs.org'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run tests
      run: npm test
    
    - name: Build project
      run: npm run build
    
    - name: Create release package
      run: |
        npm pack
        mkdir -p release
        mv *.tgz release/
    
    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        files: release/*.tgz
        body: |
          ## Cognitive Triangulation MCP Server
          
          This release includes:
          - MCP server integration for Claude Code
          - Knowledge graph building capabilities
          - Code analysis and relationship extraction
          - Neo4j and SQLite integration
          
          ### Installation
          
          ```bash
          npm install cognitive-triangulation-mcp
          ```
          
          ### Claude Code Integration
          
          Add to your Claude configuration:
          
          ```json
          {
            "mcpServers": {
              "cognitive-triangulation": {
                "command": "node",
                "args": ["node_modules/cognitive-triangulation-mcp/src/mcp-server.js"],
                "env": {
                  "NEO4J_URI": "bolt://localhost:7687",
                  "NEO4J_USER": "neo4j",
                  "NEO4J_PASSWORD": "your-password"
                }
              }
            }
          }
          ```
          
          See the [documentation](https://github.com/${{ github.repository }}) for more details.
    
    - name: Publish to npm
      if: ${{ !contains(github.ref, '-beta') && !contains(github.ref, '-alpha') }}
      run: npm publish
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
    
    - name: Publish beta to npm
      if: ${{ contains(github.ref, '-beta') || contains(github.ref, '-alpha') }}
      run: npm publish --tag beta
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}